jobs:
  build_release:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      name: Append build settings to .bazelrc
      run: 'TAG=${{ github.ref_name }}

        echo "build --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_API_KEY
        }}" >> .bazelrc

        echo "build --config=ci" >> .bazelrc

        echo "build --//deploy:jazzer_version=${TAG#v}" >> .bazelrc

        echo "build:linux --config=toolchain" >> .bazelrc

        echo "build:linux --extra_toolchains=@llvm_toolchain//:cc-toolchain-x86_64-linux"
        >> .bazelrc

        '
      shell: bash
    - continue-on-error: true
      name: Build
      run: 'bazelisk build ${{env.BUILD_BUDDY_CONFIG}} deploy:jazzer :jazzer_release

        cp -L $(bazel cquery --output=files deploy:jazzer) jazzer-${{ matrix.name
        }}.jar

        cp -L $(bazel cquery --output=files :jazzer_release) jazzer-${{ matrix.name
        }}.tar.gz

        '
      shell: bash
    - continue-on-error: true
      name: Upload jazzer.jar
      uses: actions/upload-artifact@v3
      with:
        if-no-files-found: error
        name: jazzer_tmp
        path: jazzer-${{ matrix.name }}.jar
    - continue-on-error: true
      name: Upload release archive
      uses: actions/upload-artifact@v3
      with:
        if-no-files-found: error
        name: jazzer_releases
        path: jazzer-${{ matrix.name }}.tar.gz
    strategy:
      matrix:
        include:
        - name: linux
          os: ubuntu-20.04
        - name: macos
          os: macos-11
        - name: windows
          os: windows-2019
  create_release:
    needs: build_release
    permissions:
      contents: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: checkout
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Download individual tar.gzs
      uses: actions/download-artifact@v3
      with:
        name: jazzer_releases
        path: _releases/
    - continue-on-error: true
      name: create release
      uses: softprops/action-gh-release@c9b46fe7aad9f02afd89b12450b780f52dacfb2d
      with:
        draft: true
        files: '_releases/jazzer-linux.tar.gz

          _releases/jazzer-macos.tar.gz

          _releases/jazzer-windows.tar.gz

          '
        generate_release_notes: true
  maven_predeploy:
    environment:
      name: Deploy
    needs: merge_jars
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      name: Append build settings to .bazelrc
      run: 'TAG=${{ github.ref_name }}

        echo "build --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_API_KEY
        }}" >> .bazelrc

        echo "build --config=ci" >> .bazelrc

        echo "build --//deploy:jazzer_version=${TAG#v}" >> .bazelrc

        echo "build:linux --config=toolchain" >> .bazelrc

        echo "build:linux --extra_toolchains=@llvm_toolchain//:cc-toolchain-x86_64-linux"
        >> .bazelrc

        '
      shell: bash
    - continue-on-error: true
      name: Download merged jar
      uses: actions/download-artifact@v3
      with:
        name: jazzer
        path: _tmp/
    - continue-on-error: true
      env:
        MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
        MAVEN_USER: ${{ secrets.MAVEN_USER }}
        RELEASE_SIGNING_KEY_ID: ${{ secrets.RELEASE_SIGNING_KEY_ID }}
        RELEASE_SIGNING_KEY_PRIVATE: ${{ secrets.RELEASE_SIGNING_KEY_PRIVATE }}
      name: Run Deployment
      run: JAZZER_JAR_PATH="$(pwd)/_tmp/jazzer.jar" bazel run deploy
  merge_jars:
    needs: build_release
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Download individual jars
      uses: actions/download-artifact@v3
      with:
        name: jazzer_tmp
        path: _tmp/
    - continue-on-error: true
      name: Merge jars
      run: "bazel run @rules_jvm_external//private/tools/java/com/github/bazelbuild/rules_jvm_external/jar:MergeJars\
        \ -- \\\n  --output \"$(pwd)\"/_tmp/jazzer.jar \\\n  $(find \"$(pwd)/_tmp/\"\
        \ -name '*.jar' -printf \"--sources %h/%f \")\n"
    - continue-on-error: true
      name: Upload merged jar
      uses: actions/upload-artifact@v3
      with:
        if-no-files-found: error
        name: jazzer
        path: _tmp/jazzer.jar
name: Pre-Release
on:
  repository_dispatch:
    types: trigger-ga___prerelease.yaml
